params:
  - params.yaml
    #- config.yaml
    #- cfg/ds
  

    #- cfg/data_cfg.json:property,split,data_seed
    #- cfg/model_cfg.json:

#   - split: random,accurate,scaffold
#   - model: mmb-lin,mmb-hier,mmb-ft-hier,mmb-ft-lin,mmb-avg,ecfp-hier,ecfp-lin

stages:
  split_data:
    # matrix:
    #   split: ${data.split}
    cmd: 
      # - echo "${item.ds.task} ${item.ds.split}"
      - cd /workspace && echo "${ds.task} ${ds.split}"
      - mkdir -p data/${ds.task}/${ds.split}/
        #- python3 scripts/split_data.py ${ds}
      #        ${ds.task} ${ds.split}
    params:
      - ds
    deps:
      # - data/AqueousSolu.csv
      # - cfg/data_config.json
      - src/dataloader.py
    outs:
      - data/${ds.task}/${ds.split}/

  train_model:
    cmd: 
      - mkdir -p our/${ds.task}/${ds.split}/${ml.model}-${ml.head}/{viz,model}
      - echo ${ml}
      - python3 scripts/train_model.py ${ds} ${ml}
            # ${ml.model} ${ml.head}
    params:
      - ml.model
      - ml.head
    # matrix:
    #   model: ${ml.model}
    #   head: ${ml.head}
    #   split: ${data.split}
    deps:
      - data/${ds.task}/${ds.split}/
      - src/model.py
      # - scripts/model_config.json
      # - scripts/train_model.py
    metrics:
      - out/${ds.task}/${ds.split}/${ml.model}-${ml.head}/metrics.json
    outs:
      - out/${ds.task}/${ds.split}/${ml.model}-${ml.head}/model/
      - out/${ds.task}/${ds.split}/${ml.model}-${ml.head}/best.pt

  # predict_aqueous:
  #   cmd: python3 scripts/predict_aqueous.py ${ml}
  #   params:
  #     - ml.model
  #     - ml.head
  #     - ml.xai
  #   deps:
  #     - src/model.py
  #     - scripts/predict_aqueous.py
  #     - data/${ds.task}/${ds.split}/
  #     - out/${ds.task}/${ds.split}/${ml.model}-${ml.head}/model/
  #   outs:
  #     - out/${ds.task}/${ds.split}/${ml.model}-${ml.head}/metrics.json 
  #     - out/${ds.task}/${ds.split}/${ml.model}-${ml.head}/preds.csv 
  #     - out/${ds.task}/${ds.split}/${ml.model}-${ml.head}/best.pt 
  #     - out/${ds.task}/${ds.split}/${ml.model}-${ml.head}/plots/

  explain_model:
    cmd: python3 scripts/explain_model.py ${ds} ${ml} ${xai}
      #${ml.model} ${ml.head} ${ml.xai}
    deps:
      # - src/model.py
      - scripts/explain_model.py
      - data/${ds.task}/${ds.split}/test.pickle
      - out/${ds.task}/${ds.split}/${ml.model}-${ml.head}/best.pt
      - src/maskedhead.py
      #- aq_prod/models/
      #- scripts/model_cfg.json
    params:
      - ml.model
      - ml.head
      - xai
    outs:
      - out/${ds.task}/${ds.split}/${ml.model}-${ml.head}/viz
      - out/${ds.task}/${ds.split}/${ml.model}-${ml.head}/parity.png

  aq:
    cmd: echo "Finished full aqueous solubility pipeline"
    deps:
    - out/${ds.task}/${ds.split}/
    - out/${ds.task}/${ds.split}/${ml.model}-${ml.head}/best.pt
    - out/${ds.task}/${ds.split}/${ml.model}-${ml.head}/viz
    # - /aq_prod/AqueousSolu_predictions.csv


  train_combi:
    cmd: python3 scripts/train_combi.py
    deps:
    - data/CombiSolu-Exp.csv
    - scripts/train_combi.py
    - src/model.py
    - src/dataloader.py
    - scripts/combi_config.json
    outs:
    - results/combi/models/:
        persist: true
  
  plot_combi:
    cmd: python3 scripts/explain_combi.py
    deps:
    - data/CombiSolu-Exp.csv
    - src/model.py
    - src/dataloader.py
    - scripts/explain_combi.py
    - results/combi/models/
    - scripts/combi_config.json
    outs:
    - results/combi/viz/:
        persist: true

  combi:
    cmd: echo "Finished full combi solubility pipeline"
    deps:
    - results/combi/models/
    - results/combi/viz/

  train_shap:
    cmd: python3 scripts/train_aqueous.py
    deps:
    - data/AqueousSolu.csv
    - scripts/train_aqueous.py
    - src/model.py
    - src/dataloader.py
    - scripts/model_cfg.json
    outs:
    - results/shap/models/:
        persist: true

  plot_shap:
    cmd: python3 scripts/explain_shap.py
    deps: 
    - data/AqueousSolu.csv
    - src/model.py
    - src/explainer.py
    - scripts/explain_shap.py
    - results/shap/models/
    outs:
    - results/shap/AqueousSolu_SHAP.csv
    - results/shap/viz/:
        persist: true
  
  shap:
    cmd: echo "Finished full SHAP aqueous solubility pipeline"
    deps:
    - results/shap/models/
    - results/shap/viz/


###############################################################
########################### CMC ###############################
# mkdir results/cmc/{models, viz_ours, viz_shap}
  train_cmc:
    cmd: python3 scripts/train_cmc.py
    deps:
    - data/cmcdata.csv
    - data/cmcdata_micellization.csv
    - scripts/train_cmc.py
    - src/model.py
    - src/prop_loader.py
    - scripts/cmc_config.json
    outs:
    - results/cmc/models/:
        persist: true 

  plot_cmc:
    cmd: python3 scripts/explain_cmc.py
    deps: 
    - data/cmcdata.csv
    - data/cmcdata_micellization.csv
    - src/prop_loader.py
    - src/model.py
    - src/explainer.py
    - scripts/cmc_config.json
    - scripts/explain_cmc.py
    - results/cmc/models/
    outs:
    - results/cmc/cmc_predictions.csv
    - results/cmc/viz_ours/:
        persist: true
  
  # REPLACED BY train_cmc with config:shap?
  # train_cmc_shap:
  #   cmd: python3 scripts/train_shap_cmc.py 
  #   deps:
  #   - data/cmc_dataset.csv
  #   - scripts/train_shap_cmc.py
  #   - src/model.py
  #   - src/prop_loader.py
  #   - scripts/cmc_config.json
  #   outs:
  #   - results/cmc/models_shap/:
  #       persist: true

  shap_cmc:
    cmd: python3 scripts/explain_shap_cmc.py
    deps: 
    - data/cmcdata.csv
    - data/cmcdata_micellization.csv
    - src/prop_loader.py
    - src/model.py
    - src/explainer.py
    - scripts/cmc_config.json
    - scripts/explain_shap_cmc.py
    - results/cmc/models/
    outs:
    - results/cmc/cmc_shap_predictions.csv
    - results/cmc/viz_shap/:
        persist: true

  cmc:
    cmd: echo "Finished full cmc + shap explainability pipeline"
    deps:
    - results/cmc/models/
    - results/cmc/viz_ours/
    - results/cmc/viz_shap/
